plugins {
    id 'java'
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"

    // quality
    id 'com.diffplug.spotless' version '6.25.0' apply false

    // Publishing
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'

    // quality
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'jacoco'

    apply from: "$rootDir/publish.gradle"

    group = 'dev.openfga'
    version = '0.0.1'

    java {
        sourceCompatibility = 17
        targetCompatibility = 17

        withJavadocJar()
        withSourcesJar()
    }

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }

    test {
        useJUnitPlatform()
    }

    spotless {
        format 'misc', {
            // define the files (e.g. '*.gradle', '*.md') to apply `misc` to
            target '.gitignore', '*.gradle'
            // define the steps to apply to those files
            trimTrailingWhitespace()
            indentWithSpaces()
            endWithNewline()
        }
        java {
            palantirJavaFormat()
            removeUnusedImports()
            importOrder()
        }
    }

    test {
        finalizedBy jacocoTestReport // report is always generated after tests run
    }

    jacocoTestReport {
        // tests are required to run before generating a JaCoCo coverage report.
        dependsOn test
    }

    tasks.register('fmt') {
        dependsOn 'spotlessApply'
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri('https://s01.oss.sonatype.org/service/local/'))
            snapshotRepositoryUrl.set(uri('https://s01.oss.sonatype.org/content/repositories/snapshots/'))
            username.set(System.getenv('MAVEN_USERNAME'))
            password.set(System.getenv('MAVEN_PASSWORD'))
        }
    }
}
